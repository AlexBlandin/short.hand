[project]
name = "shorthand_packages"
description = "common < hobby < extra + dev < all"
version = "1.0.0"
license = "MIT"
authors = [{ name = "AlexBlandin" }]
dependencies = ["pip", "setuptools", "wheel", "virtualenv"]

[project.optional-dependencies]

# Convenience features
base = ["ruff", "attrs", "cattrs"]
common = ["shorthand_packages[base]", "shorthand_packages[pytdl]", "shorthand_packages[sunrise]"]
hobby = [
  "shorthand_packages[common]",
  "shorthand_packages[cli]",
  "shorthand_packages[astro]",
  "shorthand_packages[writing]",
  "shorthand_packages[web]",
  "shorthand_packages[ml]",
  "shorthand_packages[external]",
]
extra = [
  "shorthand_packages[hobby]",
  "shorthand_packages[crypto]",
  "shorthand_packages[cli_plus]",
  "shorthand_packages[handy]",
  "shorthand_packages[notebook]",
  "shorthand_packages[numeric]",
  "shorthand_packages[img]",
  "shorthand_packages[gui]",
  "shorthand_packages[numba_fast]",
]
dev = [
  "shorthand_packages[base]",
  "shorthand_packages[type]",
  "shorthand_packages[test]",
  "shorthand_packages[debug]",
  "shorthand_packages[cli]",
  "shorthand_packages[external]",
  "shorthand_packages[stubs]",
]

# Specific hobby projects as features
yt-dlp = ["yt-dlp", "curl_cffi"]
pytdl = [
  "shorthand_packages[yt-dlp]",
  "shorthand_packages[base]",
  "langcodes",
  "pytomlpp",
  "humanize",
  "tqdm",
]
sunrise = ["geocoder==1.38.1", "shorthand_packages[base]"]

# Toolbox features
type = ["mypy"]
test = ["pytest"]
debug = ["pdbp"]
cli = ["tqdm", "rich", "icecream", "tabulate", "colorama", "termcolor"]
cli_plus = [
  "shorthand_packages[cli]",
  "plotext[image]",
  "pytermgui",
  "textual",
  "textual-dev",
]
crypto = ["pynacl", "cryptography", "certifi", "blake3"]
handy = [
  "shorthand_packages[base]",
  "tabulate",
  "pytomlpp",
  "sortedcontainers",
  "attrs",
  "cattrs",
  "more-itertools",
  "toolz",
  "fastcore",
  "humanize",
  "parse",
  "regex",
  "pendulum",
  "pylev",
  "langcodes",
  "psutil",
]
astro = ["skyfield"]
carto = ["geopandas"]
external = ["cffi", "rethinkdb", "duckdb"]
writing = ["pypandoc", "proselint"]
web = [
  "aiohttp",
  "async-timeout",
  "beautifulsoup4",
  "lxml",
  "httpie",
  "soupsieve",
  "requests",
  "urllib3",
]
notebook = ["jupyter", "notebook", "graphviz", "tqdm", "img"]
img = ["Pillow", "matplotlib", "seaborn[stats]", "pillow-avif-plugin"]
gui = ["shorthand_packages[img]", "dearpygui"]
numeric = [
  "numpy",
  "pandas",
  "scipy",
  "sympy",
  "gmpy2==2.2.0a1",
  "numba",
  "imageio",
]
autograd = [
  "shorthand_packages[numeric]",
  "jax[cpu]",
  "equinox",
  "blackjax",
  "numpyro",
  "diffrax",
  "optimistix",
  "lineax",
  "sympy2jax",
  "jaxtyping",
]
ml_jax = [
  "shorthand_packages[autograd]",
  "pgx",
  # "jumanji",
  "gymnax",
  # "envpool", # <3.12
  "pysr",
  "elegy",
  "trax",
  "jraph",
  "neural-tangents",
  "distrax",
  "cvxpylayers",
  "objax",
  "rlax",
  "chex",
  "optax",
  "orbax-checkpoint",
  "orbax-export",
]
ml_tf = [
  "shorthand_packages[numeric]",
  "tensorflow",
  "tensorflow-probability",
  "dm-sonnet",
]
ml = ["keras", "shorthand_packages[ml_jax]", "shorthand_packages[ml_tf]"]
# taichi = ["taichi"] # <3.12 # and actually had (beta) windows support now!
numba_fast = ["tbb", "intel-cmplr-lib-rt"]
# consider = ["pywin32", "mpl_plotter", "pre-commit"]
# pip install -U "jax[cuda12_pip]" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

# Type stubs, try to keep uptodate
stubs = [
  "typing-extensions",
  "pandas-stubs",
  "types-Pillow",
  "types-requests",
  "types-openpyxl",
  "types-Pygments",
  "types-colorama",
  "types-decorator",
  "types-jsonschema",
  "types-six",
]
