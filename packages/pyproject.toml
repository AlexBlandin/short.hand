[project]
name = "shorthand_packages"
description = "a toolbox of packages"
version = "1.0.0"
license = "MIT"
requires-python = ">=3.13" # this is the baseline "system" python, not venv related
authors = [{ name = "AlexBlandin" }]
dependencies = [
  "pip",
  "ruff",
  "pdbp",
  "attrs",
  "wheel",
  "cattrs",
  "duckdb",
  "yt-dlp[default,curl-cffi]>2024.10.22",
  "basedmypy",
  "curl-cffi",
  "setuptools",
  "virtualenv",
  "basedpyright",
  "geocoder==1.38.1",
]

[project.optional-dependencies]
cli = [
  "tqdm",
  "rich",
  "typer",
  "textual",
  "colorama",
  "pytermgui",
  "termcolor",
  "textual-dev",
  "plotext[image]",
]
notebook = [
  # "lumen",
  # "panel",
  # "hvplot",
  # "intake",
  "jupyter",
  "notebook",
  # "datashader",
  "jupyterlab",
  "jupyverse[auth,jupyterlab]",
]
handy = [
  "cffi",
  "pytz",
  "toolz",
  "blake3",
  "duckdb",
  "psutil",
  "pynacl",
  "pytest",
  "tzdata",
  "xxhash",
  "zipfly",
  "certifi",
  "pywin32",
  "fastcore",
  "humanize",
  "whenever", # community "pendulum-next" with better DST, with speed
  "skyfield",
  "geopandas",
  "pyroaring",
  "cachetools",
  "stringzilla",
  # "typstwriter",
  "cryptography",
  "pyinstrument",
  "duckdb-engine",
  "wat-inspector",
  "more-itertools",
  "sortedcontainers",
  "typing-extensions",
]
parsing = [
  "parse",
  "regex",
  "pylev",
  "pyasn1",
  "ada_url", # avoid can_ada
  "pikepdf",
  "ocrmypdf",
  "pypandoc",
  "pytomlpp",
  "langcodes",
  "proselint",
  "rapidfuzz",
  "tree-sitter",
  "ast-comments",
  "parsimonious",
  "pyahocorasick",
  # "tree-sitter-languages", # always late to python releases
]
writing = [
  "mdformat",
  "mdformat-gfm",
  "mdformat-frontmatter",
  "mdformat-footnote",
  "mdformat-gfm-alerts",
]
web = [
  "lxml",
  # "ucall", # no 3.13 support yet
  "httpie",
  "aiohttp",
  "urllib3",
  "html5lib",
  "requests",
  "soupsieve",
  "async-timeout",
  "beautifulsoup4",
]
visual = [
  "panel", # holoviz
  "param", # holoviz
  "hvplot", # holoviz
  "Pillow",
  # "dtreeviz",
  # "graphviz",
  "dearpygui",
  "holoviews", # holoviz
  # "pygwalker", # quickjs build error
  "matplotlib",
  "datashader", # holoviz
  "seaborn[stats]",
  "pillow-avif-plugin",
]
numeric = [
  "tbb",
  "pint",
  "gmpy2",
  "numba",
  "numpy",
  # "patsy",
  "scipy",
  "sympy",
  "lineax",
  # "nutpie",
  "polars",
  # # "taichi",
  "diffrax",
  "equinox",
  # "imageio",
  # "numpyro",
  # # "shapely",
  "usearch",
  "jax[cpu]",
  "blackjax",
  # "formulaic",
  "jaxtyping",
  "sympy2jax",
  # "optimistix",
  # "fastcluster",
  "pandas",
  # "fireducks",
  "redframes",
  # "pandas[all]",
  "pint-pandas",
  # "statsmodels",
  # "linearmodels",
  "uncertainties",
  "intel-cmplr-lib-rt",
]
ml = [
  # "pgx",
  # "chex",
  # "PiML",
  "pysr",
  # "rlax",
  # "shap",
  # "trax",
  "uform",
  # # "alibi",
  # "elegy",
  # "jraph",
  "keras",
  # "objax",
  "optax",
  # "gymnax",
  "pdpbox",
  # "dice-ml",
  # "distrax",
  # "imodels",
  # # "jumanji",
  # # "envpool",
  # "lightgbm",
  # "interpret",
  # "cvxpylayers",
  # "orbax-export",
  "scikit-learn",
  # "neural-tangents", # depends on tf which doesn't support 3.13 yet
  # "orbax-checkpoint",
  # # "tensorflow-probability[jax]",
]
typeshed = [
  "types-six",
  "types-cffi",
  "types-pytz",
  "types-tqdm",
  "types-zstd",
  "types-attrs",
  "types-regex",
  "pandas-stubs",
  "types-Pillow",
  "types-psutil",
  "types-pyasn1",
  "types-xxhash",
  "types-certifi",
  "types-pywin32",
  "types-seaborn",
  "types-shapely",
  "types-urllib3",
  "types-colorama",
  "types-openpyxl",
  "types-Pygments",
  "types-requests",
  "types-termcolor",
  "types-cachetools",
  "types-jsonschema",
  "types-tree-sitter",
  "types-cryptography",
  "types-parsimonious",
  "types-beautifulsoup4",
  "types-tree-sitter-languages",
]

# # Include `torch` whenever `--extra cpu` or `--extra gpu` is provided.
# ml_cpu = ["torch>=2.5.1"]
# ml_gpu = ["torch>=2.5.1"]

# [tool.uv]
# # But allow `cpu` and `gpu` to choose conflicting versions of `torch`.
# conflicts = [[{ extra = "ml_cpu" }, { extra = "ml_gpu" }]]

# [tool.uv.sources]
# torch = [
#   # With `--extra cpu`, pull PyTorch from the CPU-only index.
#   { index = "pytorch-cpu", extra = "ml_cpu", marker = "platform_system != 'Darwin'" },
#   # With `--extra gpu`, pull PyTorch from the GPU-enabled index.
#   { index = "pytorch-gpu", extra = "ml_gpu" },
# ]

# [[tool.uv.index]]
# name = "pytorch-cpu"
# url = "https://download.pytorch.org/whl/cpu"
# explicit = true

# [[tool.uv.index]]
# name = "pytorch-gpu"
# url = "https://download.pytorch.org/whl/cu124"
# explicit = true
