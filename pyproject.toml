[tool.poetry]
name = "short.hand"
version = "1.0.0"
description = "A series of useful shorthands originally devised during Advent of Code 2017."
authors = ["AlexBlandin"]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.2"
yapf = "^0.32.0"
pylint = "^3.0.0"
isort = "^5.12.0"
# pyupgrade = "^3.15.0" # deprecated, ruff has (mostly) replaced this

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 160

[tool.ruff.lint]
select = ["F", "E", "W", "I", "N", "D", "UP", "B", "SIM", "TRY", "FLY", "RUF"]
ignore = [] # ignore SIM105 **only** when it's performance critical

[tool.yapf]
based_on_style = "pep8"
indent_width = 2
continuation_indent_width = 2
column_limit = 160
blank_line_before_nested_class_or_def = false
blank_lines_around_top_level_definition = 1
coalesce_brackets = true
dedent_closing_brackets = true
indent_dictionary_value = true
indent_blank_lines = true
join_multiple_lines = false
space_between_ending_comma_and_closing_bracket = true
spaces_around_default_or_named_assign = true
spaces_before_comment = 1

[tool.isort]
ensure_newline_before_comments = true
include_trailing_comma = true
lines_after_imports = 1
use_parentheses = true
comment_prefix = " #"
multi_line_output = 3
force_grid_wrap = 0
reverse_sort = true
length_sort = true
line_length = 160
from_first = true
indent = "  "

#####
# Got to figure out Hatch, clearly a better choice than Poetry for the future, but damn if the barrier to entry isn't higher... but that's what a template like this is great for handling
#####

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

# [project]
# name = "template"
# description = ''
# readme = "README.md"
# requires-python = ">=3.10"
# license = "MIT"
# # keywords = []
# # authors = [
# #   { name = "Alex Blandin", email = "20842735+AlexBlandin@users.noreply.github.com" },
# # ]
# # classifiers = [
# #   "Development Status :: 1 - Planning",
# #   "Development Status :: 2 - Pre-Alpha",
# #   "Development Status :: 3 - Alpha",
# #   "Development Status :: 4 - Beta",
# #   "Development Status :: 5 - Production/Stable",
# #   "Development Status :: 6 - Mature",
# #   "Development Status :: 7 - Inactive",
# #   "Framework :: Hatch",
# #   "License :: OSI Approved :: MIT License",
# #   "Programming Language :: Python",
# #   "Programming Language :: Python :: 3",
# #   "Programming Language :: Python :: 3 :: Only",
# #   "Programming Language :: Python :: 3.10",
# #   "Programming Language :: Python :: 3.11",
# #   "Programming Language :: Python :: 3.12",
# #   "Programming Language :: Python :: 3.13",
# #   "Programming Language :: Python :: Implementation :: CPython",
# #   "Programming Language :: Python :: Implementation :: PyPy",
# # ]
# # dynamic = ["version"]
# dependencies = []

# [project.urls]
# Documentation = "https://github.com/unknown/template#readme"
# Issues = "https://github.com/unknown/template/issues"
# Source = "https://github.com/unknown/template"

# [tool.hatch.envs.default]
# dependencies = [
#   "pytest",
#   "pytest-cov",
# ]

# # [tool.hatch.version]
# # path = "template/__about__.py"

# # [tool.hatch.envs.default.scripts]
# # cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=template --cov=tests {args}"
# # no-cov = "cov --no-cov {args}"

# [[tool.hatch.envs.test.matrix]]
# python = ["310", "311", "312"]

# # [tool.coverage.run]
# # branch = true
# # parallel = true
# # omit = [
# #   "template/__about__.py",
# # ]

# # [tool.coverage.report]
# # exclude_lines = [
# #   "no cov",
# #   "if __name__ == .__main__.:",
# #   "if TYPE_CHECKING:",
# # ]
